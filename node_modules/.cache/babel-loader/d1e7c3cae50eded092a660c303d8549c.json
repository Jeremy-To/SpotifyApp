{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jeremyto/Documents/Programation/testSpotify/api-spotify/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/jeremyto/Documents/Programation/testSpotify/api-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var CLIENT_ID='0d7a06c2d0d344998ac48dbc7c6c1824';var REDIRECT_URI='http://localhost:3000/';var accessToken;var Spotify={getAccessToken:function getAccessToken(){if(accessToken){return accessToken;}//check for access token match\nvar accessTokenMatch=window.location.href.match(/access_token=([^&]*)/);var expiresInMatch=window.location.href.match(/expires_in=([^&]*)/);if(accessTokenMatch&&expiresInMatch){accessToken=accessTokenMatch[1];var expiresIn=Number(expiresInMatch[1]);// This clears the parameters, allowing us to grab a new access token when it expires\nwindow.setTimeout(function(){return accessToken='';},expiresIn*1000);window.history.pushState('Access Token',null,'/');return accessToken;}else{var accessUrl=\"https://accounts.spotify.com/authorize?client_id=\".concat(CLIENT_ID,\"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(REDIRECT_URI);window.location=accessUrl;}},search:function search(term){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var accessToken,response,jsonResponse;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:accessToken=Spotify.getAccessToken();_context.next=3;return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term),{headers:{Authorization:\"Bearer \".concat(accessToken)}});case 3:response=_context.sent;_context.next=6;return response.json();case 6:jsonResponse=_context.sent;if(jsonResponse.tracks){_context.next=9;break;}return _context.abrupt(\"return\",[]);case 9:return _context.abrupt(\"return\",jsonResponse.tracks.items.map(function(track){return{id:track.id,name:track.name,artist:track.artists[0].name,album:track.album.name,uri:track.uri};}));case 10:case\"end\":return _context.stop();}}},_callee);}))();},savePlaylist:function savePlaylist(name,trackURIs){if(!name||!trackURIs.length){return;}var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};var userID;return fetch(\"https://api.spotify.com/v1/me\",{headers:headers}).then(function(response){return response.json();}).then(function(jsonResponse){userID=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userID,\"/playlists\"),{headers:headers,method:'POST',body:JSON.stringify({name:name})}).then(function(response){return response.json();}).then(function(jsonResponse){var playlistID=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userID,\"/playlists/\").concat(playlistID,\"/tracks\"),{headers:headers,method:'POST',body:JSON.stringify({uris:trackURIs})});});});}};export default Spotify;","map":{"version":3,"names":["CLIENT_ID","REDIRECT_URI","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","search","term","fetch","headers","Authorization","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","savePlaylist","trackURIs","length","userID","then","method","body","JSON","stringify","playlistID","uris"],"sources":["/Users/jeremyto/Documents/Programation/testSpotify/api-spotify/src/util/Spotify.js"],"sourcesContent":["const CLIENT_ID = '0d7a06c2d0d344998ac48dbc7c6c1824';\n\nconst REDIRECT_URI = 'http://localhost:3000/';\n\nlet accessToken;\n\nconst Spotify = {\n    getAccessToken(){\n        if(accessToken) {\n            return accessToken\n        }\n\n        //check for access token match\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/)\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/)\n\n        if(accessTokenMatch && expiresInMatch) {\n            accessToken = accessTokenMatch[1]\n            const expiresIn = Number(expiresInMatch[1])\n            // This clears the parameters, allowing us to grab a new access token when it expires\n            window.setTimeout(() => accessToken = '', expiresIn * 1000)\n            window.history.pushState('Access Token', null, '/')\n            return accessToken\n        } else {\n            const accessUrl = `https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&response_type=token&scope=playlist-modify-public&redirect_uri=${REDIRECT_URI}`;\n            window.location = accessUrl\n        }\n    },\n    \n    async search(term) {\n        const accessToken = Spotify.getAccessToken();\n        const response = await fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        });\n        const jsonResponse = await response.json();\n        if (!jsonResponse.tracks) {\n            return [];\n        }\n        return jsonResponse.tracks.items.map(track => ({\n            id: track.id,\n            name: track.name,\n            artist: track.artists[0].name,\n            album: track.album.name,\n            uri: track.uri\n        }));\n    },\n\n    savePlaylist(name, trackURIs) {\n        if(!name || !trackURIs.length) {\n            return\n        }\n\n        const accessToken = Spotify.getAccessToken()\n        const headers = { Authorization: `Bearer ${accessToken}` }\n        let userID\n\n        return fetch(`https://api.spotify.com/v1/me`, { headers: headers})\n            .then(response => response.json())\n            .then(jsonResponse => {\n                userID = jsonResponse.id\n                return fetch(`https://api.spotify.com/v1/users/${userID}/playlists`,{\n                    headers: headers,\n                    method: 'POST',\n                    body: JSON.stringify({ name: name })\n                })\n                .then(response => response.json())\n                .then(jsonResponse => {\n                    const playlistID = jsonResponse.id\n                    return fetch(`https://api.spotify.com/v1/users/${userID}/playlists/${playlistID}/tracks`, {\n                        headers: headers,\n                        method: 'POST',\n                        body: JSON.stringify({ uris: trackURIs })\n                    })\n                })\n            })\n    }\n}\n\nexport default Spotify"],"mappings":"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"},"metadata":{},"sourceType":"module"}